{"ast":null,"code":"var _jsxFileName = \"/Users/annierome/resubuild/resume-builder/src/components/Experience.jsx\";\nimport React from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport InputItem from './inputitems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Step2 = ({\n  userObject,\n  handleChange,\n  handleExperienceChange,\n  addExperience\n}) => {\n  const handleDateChange = (index, date, name) => {\n    const newExperience = [...userObject.experience];\n    newExperience[index] = {\n      ...newExperience[index],\n      [name]: date\n    };\n    updateDatesString(index, newExperience);\n  };\n  const handleCheckboxChange = (index, e) => {\n    const newExperience = [...userObject.experience];\n    newExperience[index] = {\n      ...newExperience[index],\n      currentlyWorking: e.target.checked\n    };\n    if (e.target.checked) {\n      newExperience[index].endDate = null; // Clear the end date if currently working\n    }\n    updateDatesString(index, newExperience);\n  };\n  const handleInputChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newExperience = [...userObject.experience];\n    newExperience[index] = {\n      ...newExperience[index],\n      [name]: value\n    };\n    handleExperienceChange(newExperience);\n  };\n  const updateDatesString = (index, newExperience) => {\n    const exp = newExperience[index];\n    const startDate = exp.startDate ? new Date(exp.startDate).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short'\n    }) : '';\n    const endDate = exp.currentlyWorking ? 'Present' : exp.endDate ? new Date(exp.endDate).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short'\n    }) : '';\n    newExperience[index].dates = startDate && endDate ? `${startDate} - ${endDate}` : startDate;\n    handleExperienceChange(newExperience);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Work Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), userObject.experience && userObject.experience.map((exp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"experience-group\",\n      children: [/*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"title\",\n        onChange: e => handleInputChange(index, e),\n        label: \"Title\",\n        placeholder: \"Enter your job title\",\n        name: \"title\",\n        value: exp.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"company\",\n        onChange: e => handleInputChange(index, e),\n        label: \"Company\",\n        placeholder: \"Enter company name\",\n        name: \"company\",\n        value: exp.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `startDate-${index}`,\n        children: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: exp.startDate,\n        onChange: date => handleDateChange(index, date, 'startDate'),\n        dateFormat: \"MM/yyyy\",\n        showMonthYearPicker: true,\n        placeholderText: \"Select start date\",\n        name: `startDate-${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `endDate-${index}`,\n        children: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: exp.endDate,\n        onChange: date => handleDateChange(index, date, 'endDate'),\n        dateFormat: \"MM/yyyy\",\n        showMonthYearPicker: true,\n        placeholderText: \"Select end date\",\n        name: `endDate-${index}`,\n        disabled: exp.currentlyWorking\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `currentlyWorking-${index}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: exp.currentlyWorking,\n          onChange: e => handleCheckboxChange(index, e),\n          id: `currentlyWorking-${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), \"Currently Working\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"location\",\n        onChange: e => handleInputChange(index, e),\n        label: \"Location\",\n        placeholder: \"Enter location\",\n        name: \"location\",\n        value: exp.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), exp.description.map((desc, descIndex) => /*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"description\",\n        onChange: e => handleInputChange(index, e),\n        label: `Description ${descIndex + 1}`,\n        placeholder: \"Enter job description\",\n        name: \"description\",\n        value: desc\n      }, descIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleExperienceChange(index, 'addDescription'),\n        children: \"Add Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addExperience,\n      children: \"Add Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = Step2;\nexport default Step2;\nvar _c;\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"names":["React","DatePicker","InputItem","jsxDEV","_jsxDEV","Step2","userObject","handleChange","handleExperienceChange","addExperience","handleDateChange","index","date","name","newExperience","experience","updateDatesString","handleCheckboxChange","e","currentlyWorking","target","checked","endDate","handleInputChange","value","exp","startDate","Date","toLocaleDateString","year","month","dates","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onChange","label","placeholder","title","company","htmlFor","selected","dateFormat","showMonthYearPicker","placeholderText","disabled","type","id","location","description","desc","descIndex","onClick","_c","$RefreshReg$"],"sources":["/Users/annierome/resubuild/resume-builder/src/components/Experience.jsx"],"sourcesContent":["import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport InputItem from './inputitems';\n\nconst Step2 = ({ userObject, handleChange, handleExperienceChange, addExperience }) => {\n    const handleDateChange = (index, date, name) => {\n        const newExperience = [...userObject.experience];\n        newExperience[index] = { ...newExperience[index], [name]: date };\n        updateDatesString(index, newExperience);\n    };\n\n    const handleCheckboxChange = (index, e) => {\n        const newExperience = [...userObject.experience];\n        newExperience[index] = { ...newExperience[index], currentlyWorking: e.target.checked };\n        if (e.target.checked) {\n            newExperience[index].endDate = null; // Clear the end date if currently working\n        }\n        updateDatesString(index, newExperience);\n    };\n\n    const handleInputChange = (index, e) => {\n        const { name, value } = e.target;\n        const newExperience = [...userObject.experience];\n        newExperience[index] = { ...newExperience[index], [name]: value };\n        handleExperienceChange(newExperience);\n    };\n\n    const updateDatesString = (index, newExperience) => {\n        const exp = newExperience[index];\n        const startDate = exp.startDate ? new Date(exp.startDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short' }) : '';\n        const endDate = exp.currentlyWorking ? 'Present' : exp.endDate ? new Date(exp.endDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short' }) : '';\n        newExperience[index].dates = startDate && endDate ? `${startDate} - ${endDate}` : startDate;\n        handleExperienceChange(newExperience);\n    };\n\n    return (\n        <div className='step'>\n            <h2>Work Experience</h2>\n            {userObject.experience && userObject.experience.map((exp, index) => (\n                <div key={index} className='experience-group'>\n                    <InputItem \n                        className='title' \n                        onChange={(e) => handleInputChange(index, e)} \n                        label='Title' \n                        placeholder='Enter your job title' \n                        name='title' \n                        value={exp.title} \n                    />\n                    <InputItem \n                        className='company' \n                        onChange={(e) => handleInputChange(index, e)} \n                        label='Company' \n                        placeholder='Enter company name' \n                        name='company' \n                        value={exp.company} \n                    />\n\n                    <label htmlFor={`startDate-${index}`}>Start Date</label>\n                    <DatePicker\n                        selected={exp.startDate}\n                        onChange={(date) => handleDateChange(index, date, 'startDate')}\n                        dateFormat=\"MM/yyyy\"\n                        showMonthYearPicker\n                        placeholderText='Select start date'\n                        name={`startDate-${index}`}\n                    />\n\n                    <label htmlFor={`endDate-${index}`}>End Date</label>\n                    <DatePicker\n                        selected={exp.endDate}\n                        onChange={(date) => handleDateChange(index, date, 'endDate')}\n                        dateFormat=\"MM/yyyy\"\n                        showMonthYearPicker\n                        placeholderText='Select end date'\n                        name={`endDate-${index}`}\n                        disabled={exp.currentlyWorking}\n                    />\n\n                    <label htmlFor={`currentlyWorking-${index}`}>\n                        <input\n                            type='checkbox'\n                            checked={exp.currentlyWorking}\n                            onChange={(e) => handleCheckboxChange(index, e)}\n                            id={`currentlyWorking-${index}`}\n                        />\n                        Currently Working\n                    </label>\n\n                    <InputItem \n                        className='location' \n                        onChange={(e) => handleInputChange(index, e)} \n                        label='Location' \n                        placeholder='Enter location' \n                        name='location' \n                        value={exp.location} \n                    />\n\n                    {exp.description.map((desc, descIndex) => (\n                        <InputItem \n                            key={descIndex} \n                            className='description' \n                            onChange={(e) => handleInputChange(index, e)} \n                            label={`Description ${descIndex + 1}`} \n                            placeholder='Enter job description' \n                            name='description' \n                            value={desc} \n                        />\n                    ))}\n\n                    <button type='button' onClick={() => handleExperienceChange(index, 'addDescription')}>Add Description</button>\n                </div>\n            ))}\n            <button type='button' onClick={addExperience}>Add Experience</button>\n        </div>\n    );\n};\n\nexport default Step2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}