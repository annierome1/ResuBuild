{"ast":null,"code":"var _jsxFileName = \"/Users/annierome/resubuild/resume-builder/src/components/Experience.jsx\";\nimport React from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport InputItem from './inputitems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Step2 = ({\n  userObject,\n  handleExperienceChange,\n  handleDescriptionChange,\n  addExperience,\n  addDescription\n}) => {\n  const updateDatesString = exp => {\n    const startDate = exp.startDate ? new Date(exp.startDate).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short'\n    }) : '';\n    const endDate = exp.currentlyWorking ? 'Present' : exp.endDate ? new Date(exp.endDate).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short'\n    }) : '';\n    return startDate && endDate ? `${startDate} - ${endDate}` : startDate;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Work Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), userObject.experience.map((exp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"experience-group\",\n      children: [/*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"title\",\n        onChange: e => handleExperienceChange(index, 'title', e.target.value),\n        label: \"Title\",\n        placeholder: \"Enter your job title\",\n        name: \"title\",\n        value: exp.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"company\",\n        onChange: e => handleExperienceChange(index, 'company', e.target.value),\n        label: \"Company\",\n        placeholder: \"Enter company name\",\n        name: \"company\",\n        value: exp.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `startDate-${index}`,\n        children: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: exp.startDate,\n        onChange: date => handleExperienceChange(index, 'startDate', date),\n        dateFormat: \"MM/yyyy\",\n        showMonthYearPicker: true,\n        placeholderText: \"Select start date\",\n        name: `startDate-${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `endDate-${index}`,\n        children: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: exp.endDate,\n        onChange: date => handleExperienceChange(index, 'endDate', date),\n        dateFormat: \"MM/yyyy\",\n        showMonthYearPicker: true,\n        placeholderText: \"Select end date\",\n        name: `endDate-${index}`,\n        disabled: exp.currentlyWorking\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `currentlyWorking-${index}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: exp.currentlyWorking,\n          onChange: e => handleExperienceChange(index, 'currentlyWorking', e.target.checked),\n          id: `currentlyWorking-${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), \"Currently Working\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"location\",\n        onChange: e => handleExperienceChange(index, 'location', e.target.value),\n        label: \"Location\",\n        placeholder: \"Enter location\",\n        name: \"location\",\n        value: exp.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), exp.description.map((desc, descIndex) => /*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"description\",\n        onChange: e => handleDescriptionChange(index, descIndex, e.target.value),\n        label: `Description ${descIndex + 1}`,\n        placeholder: \"Enter job description\",\n        name: `description-${index}-${descIndex}`,\n        value: desc\n      }, descIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addDescription(index),\n        children: \"Add Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [exp.company, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: updateDatesString(exp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addExperience,\n      children: \"Add Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = Step2;\nexport default Step2;\nvar _c;\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"names":["React","DatePicker","InputItem","jsxDEV","_jsxDEV","Step2","userObject","handleExperienceChange","handleDescriptionChange","addExperience","addDescription","updateDatesString","exp","startDate","Date","toLocaleDateString","year","month","endDate","currentlyWorking","className","children","fileName","_jsxFileName","lineNumber","columnNumber","experience","map","index","onChange","e","target","value","label","placeholder","name","title","company","htmlFor","selected","date","dateFormat","showMonthYearPicker","placeholderText","disabled","type","checked","id","location","description","desc","descIndex","onClick","_c","$RefreshReg$"],"sources":["/Users/annierome/resubuild/resume-builder/src/components/Experience.jsx"],"sourcesContent":["import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport InputItem from './inputitems';\n\nconst Step2 = ({ userObject, handleExperienceChange, handleDescriptionChange, addExperience, addDescription }) => {\n    const updateDatesString = (exp) => {\n        const startDate = exp.startDate ? new Date(exp.startDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short' }) : '';\n        const endDate = exp.currentlyWorking ? 'Present' : exp.endDate ? new Date(exp.endDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short' }) : '';\n        return startDate && endDate ? `${startDate} - ${endDate}` : startDate;\n    };\n\n    return (\n        <div className='step'>\n            <h2>Work Experience</h2>\n            {userObject.experience.map((exp, index) => (\n                <div key={index} className='experience-group'>\n                    <InputItem className='title' onChange={(e) => handleExperienceChange(index, 'title', e.target.value)} label='Title' placeholder='Enter your job title' name='title' value={exp.title} />\n                    <InputItem className='company' onChange={(e) => handleExperienceChange(index, 'company', e.target.value)} label='Company' placeholder='Enter company name' name='company' value={exp.company} />\n\n                    <label htmlFor={`startDate-${index}`}>Start Date</label>\n                    <DatePicker\n                        selected={exp.startDate}\n                        onChange={(date) => handleExperienceChange(index, 'startDate', date)}\n                        dateFormat=\"MM/yyyy\"\n                        showMonthYearPicker\n                        placeholderText='Select start date'\n                        name={`startDate-${index}`}\n                    />\n\n                    <label htmlFor={`endDate-${index}`}>End Date</label>\n                    <DatePicker\n                        selected={exp.endDate}\n                        onChange={(date) => handleExperienceChange(index, 'endDate', date)}\n                        dateFormat=\"MM/yyyy\"\n                        showMonthYearPicker\n                        placeholderText='Select end date'\n                        name={`endDate-${index}`}\n                        disabled={exp.currentlyWorking}\n                    />\n\n                    <label htmlFor={`currentlyWorking-${index}`}>\n                        <input\n                            type='checkbox'\n                            checked={exp.currentlyWorking}\n                            onChange={(e) => handleExperienceChange(index, 'currentlyWorking', e.target.checked)}\n                            id={`currentlyWorking-${index}`}\n                        />\n                        Currently Working\n                    </label>\n\n                    <InputItem className='location' onChange={(e) => handleExperienceChange(index, 'location', e.target.value)} label='Location' placeholder='Enter location' name='location' value={exp.location} />\n\n                    {exp.description.map((desc, descIndex) => (\n                        <InputItem\n                            key={descIndex}\n                            className='description'\n                            onChange={(e) => handleDescriptionChange(index, descIndex, e.target.value)}\n                            label={`Description ${descIndex + 1}`}\n                            placeholder='Enter job description'\n                            name={`description-${index}-${descIndex}`}\n                            value={desc}\n                        />\n                    ))}\n\n                    <button type='button' onClick={() => addDescription(index)}>Add Description</button>\n                    \n                    <h3>{exp.company} <span>{updateDatesString(exp)}</span></h3>\n                </div>\n            ))}\n            <button type='button' onClick={addExperience}>Add Experience</button>\n        </div>\n    );\n};\n\nexport default Step2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}