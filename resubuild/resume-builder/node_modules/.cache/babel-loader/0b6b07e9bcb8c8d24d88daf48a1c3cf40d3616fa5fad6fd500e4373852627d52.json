{"ast":null,"code":"var _jsxFileName = \"/Users/annierome/resubuild/resume-builder/src/components/Experience.jsx\";\nimport React from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport InputItem from './inputitems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Step2 = ({\n  userObject,\n  handleChange,\n  handleExperienceChange,\n  addExperience\n}) => {\n  const handleDateChange = (index, date, name) => {\n    const newExperience = [...userObject.experience];\n    newExperience[index] = {\n      ...newExperience[index],\n      [name]: date\n    };\n    handleExperienceChange(newExperience);\n  };\n  const handleCheckboxChange = (index, e) => {\n    const newExperience = [...userObject.experience];\n    newExperience[index] = {\n      ...newExperience[index],\n      currentlyWorking: e.target.checked\n    };\n    if (e.target.checked) {\n      newExperience[index].endDate = null; // Clear the end date if currently working\n    }\n    handleExperienceChange(newExperience);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Work Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), userObject.experience && userObject.experience.map((exp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"experience-group\",\n      children: [/*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"title\",\n        onChange: e => handleExperienceChange(index, e),\n        label: \"Title\",\n        placeholder: \"Enter your job title\",\n        name: \"title\",\n        value: exp.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"company\",\n        onChange: e => handleExperienceChange(index, e),\n        label: \"Company\",\n        placeholder: \"Enter company name\",\n        name: \"company\",\n        value: exp.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `startDate-${index}`,\n        children: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: exp.startDate,\n        onChange: date => handleDateChange(index, date, 'startDate'),\n        dateFormat: \"MM/yyyy\",\n        showMonthYearPicker: true,\n        placeholderText: \"Select start date\",\n        name: `startDate-${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `endDate-${index}`,\n        children: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: exp.endDate,\n        onChange: date => handleDateChange(index, date, 'endDate'),\n        dateFormat: \"MM/yyyy\",\n        showMonthYearPicker: true,\n        placeholderText: \"Select end date\",\n        name: `endDate-${index}`,\n        disabled: exp.currentlyWorking\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `currentlyWorking-${index}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: exp.currentlyWorking,\n          onChange: e => handleCheckboxChange(index, e),\n          id: `currentlyWorking-${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), \"Currently Working\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"location\",\n        onChange: e => handleExperienceChange(index, e),\n        label: \"Location\",\n        placeholder: \"Enter location\",\n        name: \"location\",\n        value: exp.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), exp.description.map((desc, descIndex) => /*#__PURE__*/_jsxDEV(InputItem, {\n        className: \"description\",\n        onChange: e => handleExperienceChange(index, e, descIndex),\n        label: `Description ${descIndex + 1}`,\n        placeholder: \"Enter job description\",\n        name: \"description\",\n        value: desc\n      }, descIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleExperienceChange(index, 'addDescription'),\n        children: \"Add Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addExperience,\n      children: \"Add Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = Step2;\nexport default Step2;\nvar _c;\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"names":["React","DatePicker","InputItem","jsxDEV","_jsxDEV","Step2","userObject","handleChange","handleExperienceChange","addExperience","handleDateChange","index","date","name","newExperience","experience","handleCheckboxChange","e","currentlyWorking","target","checked","endDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exp","onChange","label","placeholder","value","title","company","htmlFor","selected","startDate","dateFormat","showMonthYearPicker","placeholderText","disabled","type","id","location","description","desc","descIndex","onClick","_c","$RefreshReg$"],"sources":["/Users/annierome/resubuild/resume-builder/src/components/Experience.jsx"],"sourcesContent":["import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport InputItem from './inputitems';\n\nconst Step2 = ({ userObject, handleChange, handleExperienceChange, addExperience }) => {\n    const handleDateChange = (index, date, name) => {\n        const newExperience = [...userObject.experience];\n        newExperience[index] = { ...newExperience[index], [name]: date };\n        handleExperienceChange(newExperience);\n    };\n\n    const handleCheckboxChange = (index, e) => {\n        const newExperience = [...userObject.experience];\n        newExperience[index] = { ...newExperience[index], currentlyWorking: e.target.checked };\n        if (e.target.checked) {\n            newExperience[index].endDate = null; // Clear the end date if currently working\n        }\n        handleExperienceChange(newExperience);\n    };\n\n    return (\n        <div className='step'>\n            <h2>Work Experience</h2>\n            {userObject.experience && userObject.experience.map((exp, index) => (\n                <div key={index} className='experience-group'>\n                    <InputItem className='title' onChange={(e) => handleExperienceChange(index, e)} label='Title' placeholder='Enter your job title' name='title' value={exp.title} />\n                    <InputItem className='company' onChange={(e) => handleExperienceChange(index, e)} label='Company' placeholder='Enter company name' name='company' value={exp.company} />\n\n                    <label htmlFor={`startDate-${index}`}>Start Date</label>\n                    <DatePicker\n                        selected={exp.startDate}\n                        onChange={(date) => handleDateChange(index, date, 'startDate')}\n                        dateFormat=\"MM/yyyy\"\n                        showMonthYearPicker\n                        placeholderText='Select start date'\n                        name={`startDate-${index}`}\n                    />\n\n                    <label htmlFor={`endDate-${index}`}>End Date</label>\n                    <DatePicker\n                        selected={exp.endDate}\n                        onChange={(date) => handleDateChange(index, date, 'endDate')}\n                        dateFormat=\"MM/yyyy\"\n                        showMonthYearPicker\n                        placeholderText='Select end date'\n                        name={`endDate-${index}`}\n                        disabled={exp.currentlyWorking}\n                    />\n\n                    <label htmlFor={`currentlyWorking-${index}`}>\n                        <input\n                            type='checkbox'\n                            checked={exp.currentlyWorking}\n                            onChange={(e) => handleCheckboxChange(index, e)}\n                            id={`currentlyWorking-${index}`}\n                        />\n                        Currently Working\n                    </label>\n\n                    <InputItem className='location' onChange={(e) => handleExperienceChange(index, e)} label='Location' placeholder='Enter location' name='location' value={exp.location} />\n                    \n                    {exp.description.map((desc, descIndex) => (\n                        <InputItem key={descIndex} className='description' onChange={(e) => handleExperienceChange(index, e, descIndex)} label={`Description ${descIndex + 1}`} placeholder='Enter job description' name='description' value={desc} />\n                    ))}\n\n                    <button type='button' onClick={() => handleExperienceChange(index, 'addDescription')}>Add Description</button>\n                </div>\n            ))}\n            <button type='button' onClick={addExperience}>Add Experience</button>\n        </div>\n    );\n};\n\nexport default Step2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}